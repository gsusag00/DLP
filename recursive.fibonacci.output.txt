
#source	"recursive.fibonacci.input.txt"


' Invocation to the main function
call main
halt


#line	1

 fibonacci:
	' * Parameters
	' * int i (offset 4)
	' * Local variables
	enter	0

#line	2
	' * If

#line	2
	push	bp
	pushi	4
	addi
	loadi
	pushi	0
	eqi
	jz	else0
	' * if body

#line	3
	' * Return
	pushi	0
	ret	2, 0, 2
	jmp	endIf0
 else0:
	' * else body
 endIf0:

#line	5
	' * If

#line	5
	push	bp
	pushi	4
	addi
	loadi
	pushi	1
	eqi
	jz	else1
	' * if body

#line	6
	' * Return
	pushi	1
	ret	2, 0, 2
	jmp	endIf1
 else1:
	' * else body
 endIf1:

#line	8
	' * If

#line	8
	push	bp
	pushi	4
	addi
	loadi
	pushi	2
	eqi
	jz	else2
	' * if body

#line	9
	' * Return
	pushi	1
	ret	2, 0, 2
	jmp	endIf2
 else2:
	' * else body
 endIf2:

#line	12
	' * Return
	push	bp
	pushi	4
	addi
	loadi
	pushi	1
	subi
call fibonacci
	push	bp
	pushi	4
	addi
	loadi
	pushi	2
	subi
call fibonacci
	addi
	ret	2, 0, 2

#line	16

 main:
	' * Parameters
	' * Local variables
	' * int i (offset -2)
	enter	2

#line	18
	' * Assignment
	push	bp
	pushi	-2
	addi
	pushi	0
	storei

#line	19
	' * While

#line	19
 while0:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	200
	lei
	jz	endwhile0
	' * While body

#line	20
	' * Write
	push	bp
	pushi	-2
	addi
	loadi
	outi

#line	20
	' * Write
	pushb	58
	outb

#line	20
	' * Write
	pushb	32
	outb

#line	20
	' * Write
	push	bp
	pushi	-2
	addi
	loadi
call fibonacci
	outi

#line	20
	' * Write
	pushb	10
	outb

#line	21
	' * Assignment
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp	while0
 endwhile0:
	ret	0, 2, 0
